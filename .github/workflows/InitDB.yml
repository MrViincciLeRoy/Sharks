name: Initialize Odoo Database

on:
  # Manual trigger only - you control when to run this
  workflow_dispatch:
    inputs:
      action:
        description: 'Database Action'
        required: true
        type: choice
        options:
          - 'Install GMailer (keep existing data)'
          - 'Complete Database Reset (DANGER: deletes all data)'
        default: 'Install GMailer (keep existing data)'

jobs:
  init-database:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build initialization Docker image
        run: |
          docker build -f Dockerfile.init -t odoo-init .

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Complete Database Reset
        if: github.event.inputs.action == 'Complete Database Reset (DANGER: deletes all data)'
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE: require
        run: |
          echo "‚ö†Ô∏è WARNING: Dropping all tables from database..."
          echo "Database: ${PGDATABASE}"
          echo ""
          
          # Drop all tables in the public schema
          PGPASSWORD="${PGPASSWORD}" psql -h "${PGHOST}" -p "${PGPORT}" -U "${PGUSER}" -d "${PGDATABASE}" << 'EOF'
          DO $$ 
          DECLARE
              r RECORD;
          BEGIN
              -- Drop all tables
              FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP
                  EXECUTE 'DROP TABLE IF EXISTS public.' || quote_ident(r.tablename) || ' CASCADE';
              END LOOP;
              
              -- Drop all sequences
              FOR r IN (SELECT sequence_name FROM information_schema.sequences WHERE sequence_schema = 'public') LOOP
                  EXECUTE 'DROP SEQUENCE IF EXISTS public.' || quote_ident(r.sequence_name) || ' CASCADE';
              END LOOP;
              
              -- Drop all views
              FOR r IN (SELECT viewname FROM pg_views WHERE schemaname = 'public') LOOP
                  EXECUTE 'DROP VIEW IF EXISTS public.' || quote_ident(r.viewname) || ' CASCADE';
              END LOOP;
          END $$;
          EOF
          
          echo "‚úÖ Database wiped clean!"
          echo ""

      - name: Run database initialization
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE: require
        run: |
          echo "Starting database initialization..."
          echo "Action: ${{ github.event.inputs.action }}"
          echo ""
          
          docker run --rm \
            -e PGHOST="${PGHOST}" \
            -e PGPORT="${PGPORT}" \
            -e PGUSER="${PGUSER}" \
            -e PGPASSWORD="${PGPASSWORD}" \
            -e PGDATABASE="${PGDATABASE}" \
            -e PGSSLMODE="${PGSSLMODE}" \
            odoo-init

      - name: Initialization Complete
        run: |
          echo ""
          echo "‚úÖ Database operation completed successfully!"
          echo ""
          if [ "${{ github.event.inputs.action }}" == "Complete Database Reset (DANGER: deletes all data)" ]; then
            echo "üîÑ Database has been completely reset and reinitialized"
            echo "üì¶ Installed modules: base, account, sale_management, GMailer"
            echo "üîë Login credentials: admin / admin"
          else
            echo "üì¶ GMailer module has been installed/updated"
            echo "üîë Use your existing login credentials"
          fi
          echo ""
          echo "Your Odoo database is now ready to use."
